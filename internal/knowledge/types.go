package knowledge

// Keep it simple - only what we need now
type RuntimeKnowledge struct {
	Runtime     string                 `json:"runtime"`
	DisplayName string                 `json:"displayName"`
	Versions    map[string]interface{} `json:"versions"`
	BuildConfig map[string]interface{} `json:"buildConfig"`
	RunConfig   map[string]interface{} `json:"runConfig"`
}

type Pattern struct {
	PatternID         string                       `json:"patternId"`
	Name              string                       `json:"name"`
	Description       string                       `json:"description"`
	Framework         string                       `json:"framework"`
	Language          string                       `json:"language"`
	Tags              []string                     `json:"tags"`
	ProjectConfig     map[string]interface{}       `json:"projectConfig,omitempty"`
	Services          []map[string]interface{}     `json:"services"`
	ZeropsYml         map[string]interface{}       `json:"zeropsYml"`
	DeploymentConfig  map[string]interface{}       `json:"deploymentConfig"`
	SetupInstructions []string                     `json:"setupInstructions"`
	CommonIssues      []map[string]string          `json:"commonIssues"`
	BestPractices     []string                     `json:"bestPractices"`
	NginxConfig       string                       `json:"nginxConfig,omitempty"`
	SourceRecipe      string                       `json:"sourceRecipe,omitempty"`
	DeploymentType    string                       `json:"deploymentType,omitempty"`
}

type ValidationResult struct {
	Valid       bool     `json:"valid"`
	Errors      []string `json:"errors"`
	Warnings    []string `json:"warnings"`
	Suggestions []string `json:"suggestions"`
}

type DependencyResolution struct {
	EnvVariables    map[string]map[string]string `json:"environmentVariables"`
	DeploymentOrder []string                     `json:"deploymentOrder"`
}

type ServiceKnowledge struct {
	Type             string                       `json:"type"`
	DisplayName      string                       `json:"displayName"`
	Category         string                       `json:"category"`
	Description      string                       `json:"description"`
	Versions         interface{}                  `json:"versions"`  // Can be []string or []map[string]interface{}
	DefaultVersion   string                       `json:"defaultVersion"`
	Modes            []string                     `json:"modes"`
	AutoGenVariables []string                     `json:"autoGeneratedVariables"`
	Configuration    map[string]interface{}       `json:"configuration"`
	BestPractices    []string                     `json:"bestPractices"`
	CommonIssues     []map[string]string          `json:"commonIssues"`
	ExampleYAML      map[string]interface{}       `json:"exampleYaml"`
	ConnectionExample map[string]string           `json:"connectionExample"`
}

type ServiceSummary struct {
	Type        string      `json:"type"`
	DisplayName string      `json:"displayName"`
	Category    string      `json:"category"`
	Versions    interface{} `json:"versions"`  // Can be []string or []map[string]interface{}
	Tags        []string    `json:"tags"`
}

type ServiceIndex struct {
	Services []*ServiceSummary `json:"services"`
}